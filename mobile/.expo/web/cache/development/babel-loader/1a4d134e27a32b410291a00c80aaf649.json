{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"discord\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var DuoMatch = function DuoMatch(_ref) {\n  var discord = _ref.discord,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(Modal, _objectSpread(_objectSpread({}, rest), {}, {\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(Text, {\n        style: styles.discord,\n        children: discord\n      })\n    })\n  }));\n};","map":{"version":3,"names":["styles","DuoMatch","discord","rest","container"],"sources":["/home/arthur/Documents/nlw/mobile/src/components/DuoMatch/index.tsx"],"sourcesContent":["import { View, Modal, ModalProps, Text } from \"react-native\"\nimport { styles } from \"./styles\"\n\ninterface Props extends ModalProps {\n    discord: string;\n}\n\nexport const DuoMatch = ({ discord, ...rest }: Props) => {\n    return (\n        <Modal {...rest}>\n            <View style={styles.container}>\n                <Text style={styles.discord}>\n                    {discord}\n                </Text>\n            </View>\n        </Modal>\n    )\n}"],"mappings":";;;;;;;;;;;AACA,SAASA,MAAT;;AAMA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAiC;EAAA,IAA9BC,OAA8B,QAA9BA,OAA8B;EAAA,IAAlBC,IAAkB;;EACrD,OACI,KAAC,KAAD,kCAAWA,IAAX;IAAA,UACI,KAAC,IAAD;MAAM,KAAK,EAAEH,MAAM,CAACI,SAApB;MAAA,UACI,KAAC,IAAD;QAAM,KAAK,EAAEJ,MAAM,CAACE,OAApB;QAAA,UACKA;MADL;IADJ;EADJ,GADJ;AASH,CAVM"},"metadata":{},"sourceType":"module"}